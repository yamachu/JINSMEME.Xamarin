<?xml version="1.0" encoding="UTF-8"?>
<enum-method-mappings>
    <!--
  This example changes the Java method:
    android.support.v4.app.Fragment.SavedState.writeToParcel (int flags)
  to be:
    android.support.v4.app.Fragment.SavedState.writeToParcel (Android.OS.ParcelableWriteFlags flags)
  when bound in C#.

  <mapping jni-class="android/support/v4/app/Fragment.SavedState">
    <method jni-name="writeToParcel" parameter="flags" clr-enum-type="Android.OS.ParcelableWriteFlags" />
  </mapping>

  Notes:
  - For Java interfaces, use "jni-interface" attribute instead of "jni-class" attribute.
  - To change the type of the return value, use "return" as the parameter name.
  - The parameter names will be p0, p1, ... unless you provide JavaDoc file in the project.
  -->
    <mapping jni-class="com/jins_jp/meme/MemeLib">
        <method jni-name="startScan" parameter="return" clr-enum-type="JINS.MEME.Android.MemeStatus" />
        <method jni-name="stopScan" parameter="return" clr-enum-type="JINS.MEME.Android.MemeStatus" />
        <method jni-name="connect" parameter="return" clr-enum-type="JINS.MEME.Android.MemeStatus" />
        <method jni-name="setMemeConnectListener" parameter="return" clr-enum-type="JINS.MEME.Android.MemeStatus" />
        <method jni-name="startDataReport" parameter="return" clr-enum-type="JINS.MEME.Android.MemeStatus" />
        <method jni-name="isCalibrated" parameter="return" clr-enum-type="JINS.MEME.Android.MemeCalibStatus" />
    </mapping>
    <mapping jni-class="com/jins_jp/meme/MemeRealtimeData">
        <method jni-name="getFitError" parameter="return" clr-enum-type="JINS.MEME.Android.MemeFitStatus" />
    </mapping>
</enum-method-mappings>
